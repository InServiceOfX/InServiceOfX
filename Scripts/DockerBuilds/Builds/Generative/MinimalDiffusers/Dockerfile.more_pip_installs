# numpy
# I wanted the latest numpy since it was a major version update from 1.x to 2.x.
# However,
# for NVIDIA Optimized Frameworks Containers,
# for 24.06 (or 24.07) container images,
# >>> numpy.__version__
#'1.24.4'
# >>> print(torchvision.__version__)
# 0.19.0a0
# >>> print(optree.__version__)
# 0.11.0
#
# As of 2025-02-12, latest for numpy is 2.2.2.
# Latest for torchvision is 0.21.0+cu124
# Latest for optree is 0.14.0
# Otherwise, this error is obtained:
# >>> import torchvision
#
# A module that was compiled using NumPy 1.x cannot be run in
# NumPy 2.2.2 as it may crash. To support both 1.x and 2.x
# versions of NumPy, modules must be compiled with NumPy 2.0.
# Some module may need to rebuild instead e.g. with 'pybind11>=2.12'.
#
# If you are a user of the module, the easiest solution will be to
# downgrade to 'numpy<2' or try to upgrade the affected module.
# We expect that some modules will need time to support NumPy 2
#
# optree needed to be upgrade because otherwise,
# 
# /usr/local/lib/python3.10/dist-packages/torch/utils/_pytree.py:185: 
# FutureWarning: optree is installed but the version is too old to support
# PyTorch Dynamo in C++ pytree. C++ pytree support is disabled. Please consider
# upgrading optree using `python3 -m pip install --upgrade 'optree>=0.13.0'`.
#

RUN pip install --upgrade pip && \
    # First check numpy version
    python -c "import numpy; print(f'Current NumPy version: {numpy.__version__}')" || \
    echo "NumPy not installed" && \
    pip uninstall -y numpy && \
    pip install --upgrade numpy && \
    python -c "import numpy; print(f'Updated NumPy version: {numpy.__version__}')" && \
    python -c "import optree; print(f'Current optree version: {optree.__version__}')" || \
    echo "optree not installed" && \
    pip uninstall -y optree && \
    pip install --upgrade optree && \
    python -c "import optree; print(f'Updated optree version: {optree.__version__}')" && \
    python -c "import torchvision; print(f'Current torchvision version: {torchvision.__version__}')" || \
    echo "torchvision not installed" && \
    pip uninstall -y torchvision && \
    pip install --upgrade torchvision && \
    python -c "import torchvision; print(f'Updated torchvision version: {torchvision.__version__}')" && \
    pip install --upgrade transformer-engine && \
    pip uninstall -y flash-attn && \
    pip install --upgrade flash-attn && \
    python -c "import flash_attn; print(f'Updated flash-attn version: {flash_attn.__version__}')" && \
    # For quantization of a Diffusion pipeline.
    pip install --upgrade bitsandbytes






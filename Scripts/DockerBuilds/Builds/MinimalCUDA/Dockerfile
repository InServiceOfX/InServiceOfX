# This Dockerfile is automatically generated by con(cat)enating textfiles. It's
# automatically concatenated by running a shell script (e.g.
# SetupPyTorchGPUDocker.sh) or doing something like, in command line,
# cat Dockerfile.header Dockerfile.base ..

# https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags
FROM nvcr.io/nvidia/cuda:12.6.0-cudnn-devel-ubuntu24.04

# Set the working directory in the container
# https://docs.docker.com/engine/reference/builder/
ENV THIRD_PARTY=/ThirdParty
WORKDIR ${THIRD_PARTY}

RUN apt-get update && \
  apt-get install --upgrade -y cmake ccache curl libssl-dev && \
  apt install -y git git-lfs && \
  git lfs install && \
  #
  #
  # Install Rust. Compare CUDA against Rust.
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
  #
  # https://rust-lang.github.io/rustup/installation/index.html
  # export PATH once, doing both Rust and poetry binaries.
  echo "export PATH=/root/.cargo/bin:$PATH" >> $HOME/.bashrc

### Further code/repositories from NVIDIA

### If you want to test cuDNN install, don't follow the instructions on NVIDIA
### for the path for the cudnn samples, instead it is in
### /usr/src/cudnn_samples_v9
### Consider
### cp -r /usr/src/cudnn_samples_v9 /ThirdParty/
### and
### apt-get install libfreeimage3 libfreeimage-dev
### https://forums.developer.nvidia.com/t/verify-cudnn-install-failed/167220/4

## CUTLASS

RUN git clone https://github.com/InServiceOfX/cutlass.git /ThirdParty/cutlass && \
  cd /ThirdParty/cutlass && \
  git checkout master && \
  cd /


